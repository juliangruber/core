name: CI

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node: ['18', '20', '21']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: sudo apt-get install xvfb gnome-keyring
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      - uses: t1m0thyj/unlock-keyring@v1
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      - run: npm ci --omit=dev
      - run: npm ci
      - run: npm run test:types
      - run: npm run test:lint
        if: matrix.os != 'windows-latest'
      - run: npm run test:unit
      - run: xvfb-run --auto-servernum npm test
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      - run: npm run test:unit
        if: ${{ !startsWith(matrix.os, 'ubuntu-') }}

  test-locales:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lang:
          - en_GB.UTF-8
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Setup libsecret for node-keytar
        run: sudo apt install gnome-keyring
      - run: npm ci
      - run: npm run test:unit
        env:
          LANG: ${{ matrix.lang }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build and test Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      REGISTRY: ghcr.io

    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup libsecret for node-keytar
        run: sudo apt install gnome-keyring

      - name: Build and load Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: core-test
          cache-from: type=registry,ref=ghcr.io/filecoin-station/core
          cache-to: type=inline

      - name: Build Docker image for other platforms
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          cache-from: type=registry,ref=ghcr.io/filecoin-station/core
          cache-to: type=inline

      - name: Start Station Core container
        run: |
         docker run \
           --name station \
           --detach \
           --env FIL_WALLET_ADDRESS=0x000000000000000000000000000000000000dEaD \
           $IMAGEID
        env:
          IMAGEID: ${{ steps.docker_build.outputs.imageid }}

      - name: Print station activity
        run: |
          sleep 10 # Wait for Station modules to start
          docker logs station

      - name: Check | Spark started
        run: docker logs station | grep "Spark started"

      - name: Check | Voyager started
        run: docker logs station | grep "Voyager started"
